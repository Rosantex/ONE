<script type ="text/javascript">

$('#ReplayDiag.dialog.dialog-front').css({ background: 'MintCream' });
$('#ReplayDiag.dialog').css({ height: 245 });
$('#ReplayDiag .dialog-body')
    .css({ position: 'relative' })
    .html('')
    .append("<input type='image' id='BGIMG' src='https://s-media-cache-ak0.pinimg.com/originals/c5/cb/45/c5cb45eccf4d1cbd58d63ea274ceb825.jpg' /><input type='text' id='Setkey' value='keydown here' /><input type='button' id='SetHotkey' value='OK' />");  

$("#ReplayDiag .dialog-title").html('AlphaKKU Ver 1.995').css({
    color: 'white',
    fontSize: 12,
    fontWeight: 'bold', 
    width: 280, 
    background: 'black' 
});

$('#Setkey').css({
    fontSize: 12,
    fontWeight: 'bold', 
    width: 120,
    top: 0, 
    left: 0, 
    position: 'absolute',
    background: 'MintCream'
});

$('#SetHotkey').css({ 
    color: 'black',
    fontSize: 12,
    fontWeight: 'bold', 
    width: 40, 
    top: 0, 
    left: 140,
    position:'absolute',    
    background: 'skyblue'
});

$('#BGIMG').css({
    width:285, 
    height: 175, 
    top: 35, 
    left: 5, 
    padding: 0,
    position: 'absolute', 
    pointerEvents: 'none',
    WebkitUserSelect: 'none'
});

$("#ReplayDiag").fadeIn(420);

var $Dsp = $("div[class='jjo-display ellipse']"),
    $Talk = $('#Talk'),
    $Take = $('#ChatBtn'),
    $Exit = $('#ExitBtn'),
    $Time = $("div[class='graph jjo-turn-time']"),
    $Turn = $('.game-input'),
    $Item = $("div[class='items']"),
    $Round = $("div[class='rounds']"),
    $setkey = $('#Setkey'),
    $sethotkey = $('#SetHotkey'),
    $myimg = $('#BGIMG');
    
var Ko = readUrl('Ko.txt');
var En = readUrl('En');

var db,
    mode, 
    option,
    key, 
    Hotkey = 96,
    setlock = false,
    k_scope = 'window',
    playing = false,
    lastupdate = 0;
    
 var KEYNAME = { 
 
    8: "BackSpace", 
    9: "Tab", 
    12: "Form Feed",
    13: "Enter", 
    16: "Shift", 
    17: "LCtrl", 
    18: "LAlt",
    19: "Pause",
    20: "CpasLock",
    27: "ESC",
    32: "SpaceBar",
    33: "PgUp",
    34: "PgDown",
    35: "End",
    36: "Home",
    37: "Left",
    38: "Up",
    39: "Right",
    40: "Down",
    45: "Insert",
    46: "Delete",
    91: "WinKey", 
    96: "Numpad0",
    97: "Numpad1",
    98: "Numpad2",
    99: "Numpad3",
    100: "Numpad4",
    101: "Numpad5",
    102: "Numpad6",
    103: "Numpad7",
    104: "Numpad8",
    105: "Numpad9",
    106: "NumpadMult",
    107: "NumpadAdd",
    109: "NumpadSub",
    110: "NumpadPoint",
    111: "NumpadDiv",
    112: "F1", 
    113: "F2", 
    114: "F3", 
    115: "F4", 
    116: "F5",
    117: "F6",
    118: "F7",
    119: "F8",
    120: "F9",
    121: "F10",
    122: "F11",
    123: "F12",
    144: "NumLock",
    186: "Semicolon(;)",
    187: "Equal Sign(=)",
    188: "Comma(,)",
    189: "Hyphen Minus(-)",
    190: "Full Stop(.)",
    191: "Slash(/)",
    192: "Back Tick(`)",
    219: "Square Bracket([)",
    220: "BackSlash(\)",
    221: "Square Bracket(])",
    222: "Apostrophe(')",
    225: "RCtrl", 
    229: "RAlt" 
    
};  

var myImgs = [

    'http://www.planwallpaper.com/static/images/53823.jpg',
    'https://wallpaperbrowse.com/media/images/cool-wallpaper-2.jpg',
    'https://wallpaperbrowse.com/media/images/cool-pictures-24.jpg',
    'https://wallpaperbrowse.com/media/images/cool-wallpaper-15.jpg',
    'http://www.planwallpaper.com/static/images/cool-wallpapers_3.jpg',
    'http://www.planwallpaper.com/static/images/Cool-Backgrounds-12.jpg',
    'http://www.planwallpaper.com/static/images/Cool-Car-Wallpapers-431.jpg',
    'https://wallpaperbrowse.com/media/images/Cool-And-Beautiful-Wallpaper.jpg',
    'https://upload.wikimedia.org/wikipedia/commons/2/20/Cool%2C_Calif_sign.jpg',
    'http://www.planwallpaper.com/static/images/6984999-cool-lights_cJkYD47.jpg',
    'http://www.planwallpaper.com/static/images/why-so-serious-cool-wallpaper.jpg',
    'http://www.planwallpaper.com/static/images/cool-wallpapers-640x480_Wev2QOj.jpg',
    'http://www.planwallpaper.com/static/images/04c05a04079a978b0ffa50a1ae42f5a6.jpg',
    'http://www.planwallpaper.com/static/images/Download-Cool-Wallpaper-Cars-Background.jpg',
    'http://www.planwallpaper.com/static/images/Axent-Wear-Cat-Ear-Headphones-a-Cool-Cat-Ear.jpg',
    'http://www.planwallpaper.com/static/images/7004205-cool-black-backgrounds-27640_lhK8IKI.jpg',
    'http://coolwallpaper.website/wp-content/uploads/2016/11/Nice-Really-Cool-Wallpaper-Free-download-best-Latest-3D-HD-desktop-wallpapers-background-Wide-Most-Popular-Images-in-high-quality-resolutions-big-lounge-sofa.jpg'

];
    
var GAMEMODE = {

    '한국어 끝말잇기': 'KSH',
    '한국어 쿵쿵따': 'KKT',
    '한국어 앞말잇기': 'KAP',
    '한국어 타자 대결': 'KTY',
    '한국어 단어 대결': 'KDA',
    '한국어 십자말풀이': 'KCW',
    '한국어 솎솎': 'KSS',
    '자음퀴즈': 'CSQ',
    '훈민정음': 'HUN',
    '영어 끝말잇기': 'ESH',
    '영어 끄투': 'EKT',
    '영어 타자 대결': 'ETY',
    '영어 단어 대결': 'EDA',
    '영어 솎솎': 'ESS'

};

var PLAY = {

    'KSH': function() {
        var f = $Dsp.text();
        f = (f.includes('(') ? '(' + f.replace('(', '|') : f.includes(':') ? pf : f);
        console.log('Search: ' + f);
	
	var mission = option.includes('미션');
	var m = mission && $Item.text();
	var _Found = ( m ? db.match('\\[' + f + '(.*' + m + '.*)+[^다]\\]') : '' );
        var _LFound;
	
	if (_Found) {
            while (_Found = db.match('\\[' + f + '(.*' + m + '.*){' + (_LFound = _Found[0]).split(m).length + ',}[^다]\\]'));
        } else {
             _LFound = (db.match('\\[(' + f + '.*[^다])\\]') || '')[0];
        }
	_Found = _LFound;
	
	if (!_Found) {
	    console.log('Not Found'); 
	    return false;
        }
        $Talk.val(_Found.slice(1, -1));
        $Take.click();
        db = db.replace(_Found, '');
        pf = f;
    },

    'KKT': function() {
        var f = $Dsp.text();
        var d = f.match(/\((\d)\)/);
        f = f.replace(d[0], '');    
        f = (f.includes('(') ? '(' + f.replace('(', '|') : f.includes(':') ? pf : f);
        console.log('Search: ' + f);
        var _Found = (db.match('\\[' + f + '.{' + (Number(d[1]) - 2).toString() + '}[^다]\\]') || '')[0];
	if (!_Found) {
	    console.log('Not Found'); 
	    return false;
	}
        $Talk.val(_Found.slice(1, -1));
        $Take.click();
        db = db.replace(_Found, '');
        pf = f;
    },

    'KAP': function() {
        var f = $Dsp.text();
        f = (f.includes('(') ? '(' + f.replace('(', '|') : f.includes(':') ? pf : f);
        console.log('Search: ' + f);
	
	var mission = option.includes('미션');
	var m = mission && $Item.text();
	var _Found = ( m ? db.match('\\[(.*' + m + '.*)+' + f + '\\]') : '' );
        var _LFound;
	
	if (_Found) {
            while (_Found = db.match('\\[(.*' + m  + '.*){' + (_LFound = _Found[0]).split(m).length + ',}' + f + '\\]'));
        } else {
             _LFound = (db.match('\\[(.+' + f + ')\\]') || '')[0];
        }
	_Found = _LFound;
	
	if (!_Found) {
	    console.log('Not Found'); 
	    return false;
	}
        $Talk.val(_Found.slice(1, -1));
        $Take.click();
        db = db.replace(_Found, '');
        pf = f;
    },

    'KTY': function() {
        $Talk.val(option.includes('속담') ? $Dsp.text() : $Dsp.text().split(' ')[0]);
        $Take.click();
    },

    'KDA': function() {
        console.log('한단-준비중');
    },

    'KCW': function() {
        console.log('십자-준비중');
    },

    'KSS': function() {
        var res = $Dsp.html().match(/%;">[가-힣](?=<\/div>)/g).join('').replace(/[^가-힣]/g,'');
        var len = 0, count = 0;
        var char = '', have = '';
        var rSock = [];

        while (len = res.length) {
            char = res[0];
            res = res.replace(new RegExp(char, 'g'), '');
            count = (len - res.length + 1).toString();
            rSock.push('\\[(.*' + char + '.*){' + count + ',}\\]');
	    have += char;
        }
	
        rSock.unshift('\\[[' + have + ']*([^' + have + '][' + have + '?])+\\]');
	var digit = (option.includes('2글자 금지') ? 3 : 2).toString();
        var _Found = (db.replace(new RegExp(rSock.join('|'), 'g'), '').match('\\[[' + have + ']{' + digit + ',}\\]') || '')[0];
        
        if (!_Found) {
	    console.log('Not Found'); 
	    return false;
	}
	$Talk.val(_Found.slice(1, -1));
	$Take.click();
	db = db.replace(_Found, '');
    },

    'CSQ': function() {
        console.log('자퀴-준비중');
    },

    'HUN': function() {
        console.log('훈민-점검중'); 
        return false;
        var f = $Dsp.text().match(/[ㄱ-ㅎ]/)[0];
        var res = f.replace(/([ㄱ-ㅎ])/g, function($1) { 
            var a = ('ㄱㄲㄴㄷㄸㄹㅁㅂㅃㅅㅆㅇㅈㅉㅊㅋㅌㅍㅎ').indexOf($1) * 588 + 44032; 
	    return '[' + String.fromCharCode(a) + '-' + String.fromCharCode(587 + a) + ']';
        });
	console.log(res);
        var _Found = (db.match('\\[' + res + '\\]') || '')[0];
	if (!_Found) {
	    console.log('Not Found'); 
	    return false;
	}
        $Talk.val(_Found.slice(1, -1));
        $Take.click();
	db = db.replace(_Found, '');
    },

    'ESH': function() {        
        var f = $Dsp.text();
        f = (f.includes('(') ? '(' + f.replace('(', '|') : f.includes(':') ? pf : f);
        console.log('Search: ' + f);
	
	var mission = option.includes('미션');
	var m = mission && $Item.text();
	var _Found = ( m ? db.match('\\[' + f + '(.*' + m + '.*)+\\]') : '' );
        var _LFound;
	
	if (_Found) {
            while (_Found = db.match('\\[' + f + '(.*' + m + '.*){' + (_LFound = _Found[0]).split(m).length + ',}\\]'));
        } else {
             _LFound = (db.match('\\[(' + f + '.+)\\]') || '')[0];
        }
	_Found = _LFound;
	
	if (!_Found) {
	    console.log('Not Found'); 
	    return false;
	}
        $Talk.val(_Found.slice(1, -1));
        $Take.click();
        db = db.replace(_Found, '');
        pf = f;
    },

    'EKT': function() {
        var f = $Dsp.text();
        f = (f.includes('(') ? '(' + f.replace('(', '|') : f.includes(':') ? pf : f);       
        console.log('Search: ' + f);
	
	var mission = option.includes('미션');
	var m = mission && $Item.text();
        var _Found = ( m ? db.match('\\[' + f + '(.*' + m + '.*)+\\]') : '' );
        var _LFound;
	
	if (_Found) {
            while (_Found = db.match('\\[' + f + '(.*' + m + '.*){' + (_LFound = _Found[0]).split(m).length + ',}\\]'));
        } else {
             _LFound = (db.match('\\[(' + f + '.+)\\]') || '')[0];
        }
	_Found = _LFound;
	
	if (!_Found) {
	    console.log('Not Found'); 
	    return false;
	}
        $Talk.val(_Found.slice(1, -1));
        $Take.click();
        db = db.replace(_Found, '');
        pf = f;
    },

    'ETY': function() {
        $Talk.val(option.includes('속담') ? $Dsp.text() : $Dsp.text().split(' ')[0]);
        $Take.click();
    },

    'EDA': function() {
        console.log('영단-준비중');
    },

    'ESS': function() {
        var res = $Dsp.html().match(/%;">\w(?=<\/div>)/g).join('').replace(/[^a-z]/g,'');
        var len = 0, count = 0;
        var char = '', have = '';
        var rSock = [];

        while (len = res.length) {
            char = res[0];
            res = res.replace(new RegExp(char, 'g'), '');
            count = (len - res.length + 1).toString();
            rSock.push('\\[(.*' + char + '.*){' + count + ',}\\]');
	    have += char;
        }
	
        rSock.unshift('\\[[' + have + ']*([^' + have + '][' + have + '?])+\\]');
	var digit = (option.includes('2글자 금지') ? 3 : 2).toString();
        var _Found = (db.replace(new RegExp(rSock.join('|'), 'g'), '').match('\\[[' + have + ']{' + digit + ',}\\]') || '')[0];
        
        if (!_Found) {
	    console.log('Not Found'); 
	    return false;
	}
	
	$Talk.val(_Found.slice(1, -1));
	$Take.click();
	db = db.replace(_Found, '');
    }

};

$Round.on('DOMSubtreeModified', function() {
    if (new Date().getTime() - lastupdate < 5555) return false;
	
    var $Mode = $("h5.room-head-mode");
    option = $Mode.html().split(' / ');
    mode = GAMEMODE[option.splice(0, 1)];
    db = (/E../.test(mode) ? En : Ko);
    console.log('[New Game]\nmode: ' + mode + '\noption: ' + option + '\n  ');
    lastupdate = new Date().getTime();
    changeImage();
});

$(window).on('keydown', function(e) {
    if (k_scope == 'setkey') {
        e.preventDefault();
        if (setlock) return false;
	
        key = e.keyCode;
        $setkey.val(KEYNAME[key] || String.fromCharCode(key)); 
    } else if (e.keyCode == Hotkey && ($Turn.is(':visible') || /(K|E)SS/.test(mode))) { 
        e.stopPropagation();
        e.preventDefault();
	if (playing) return false;
	
        var sTime = new Date().getTime();
	playing = true;
        PLAY[mode]();
	console.log(new Date().getTime() - sTime);
	playing = false;
    }
});

$setkey.on({
    focus: function() {
        k_scope = 'setkey';
    },
    blur: function() {
        k_scope = 'window';
    },
    dblclick: function() {
        if (setlock) { 
	    setlock = false;
            $(this).css({ background: '' });
	}
    }
});

$sethotkey.on({
    click: function(e) {
        if (setlock) return false;
    
        Hotkey = key;
        $setkey.css({ background: 'pink' });
        setlock = true;
        console.log('Hotkey Modified: ' + (KEYNAME[key]||String.fromCharCode(key)));
    },
    mouseover: function() {
        $(this).css({ color: 'red' });
    },
    mouseout: function() {
        $(this).css({ color: '' });
    }
});

function changeImage() {
    var CurSrc = $myimg.attr('src');
    var TempSrc = myImgs[Math.floor(Math.random() * myImgs.length)];
    while (CurSrc == TempSrc) TempSrc = myImgs[Math.floor(Math.random() * myImgs.length)];

    $myimg.attr('src', TempSrc);
}

function shuffle(box) {
    var arr = box.split('\n');
    var CurIndex = arr.length, TempValue, RndIndex;
    while (0 !== CurIndex) {
        RndIndex = Math.floor(Math.random() * CurIndex);
	CurIndex -= 1;
	TempValue = arr[CurIndex];
	arr[CurIndex] = arr[RndIndex];
	arr[RndIndex] = TempValue;
    }
    return arr.join('\n');
}

function readUrl(Url) {
    return $.ajax({
        type: "GET",
        url: 'https://raw.githubusercontent.com/Rosantex/my/master/' + Url,
        async: false
    }).responseText;
}

</script>
