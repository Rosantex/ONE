<script type ="text/javascript">

var wBox = readUrl('En') + shuffle(readUrl('Ko.txt').split('\n')).join('\n');
var db;
var mode, option;
var _State;

var $Dsp = $("div[class='jjo-display ellipse']"),
    $Talk = $('#Talk'),
    $Take = $('#ChatBtn'),
    $Exit = $('#ExitBtn'),
    $Time = $("div[class='graph jjo-turn-time']"),
    $Turn = $('.game-input'),
    $Item = $("div[class='items']"),
    $Round = $("div[class='rounds']"),
    $Board = $('#ReplayDiag .dialog-body');

var PLAY = {

'한국어 끝말잇기': function() {
    var f = $Dsp.text();
    f = (f.includes('(') ? '(' + f.replace('(', '|') : f.includes(':') ? pf : f);
    console.log('Search: ' + f);
    var _Found = (db.match('\\[(' + f + '.*[^다])\\]')[0] || '');
        $Talk.val(_Found.slice(1, -1));
      	$Take.click();
        db = db.replace(_Found, '');
        pf = f;
},

'한국어 쿵쿵따': function() {
console.log('쿵따');
},

'한국어 앞말잇기': function() {
console.log('한앞');
},

'한국어 타자 대결': function() {
var f = $Dsp.text();
$Talk.val(option.includes('속담') ? f : f.split(' '));
$Take.click();
},

'한국어 단어 대결': function() {
console.log('한단');
},

'한국어 십자말풀이': function() {
console.log('십자');
},

'한국어 솎솎': function() {
console.log('한쇽');
},

'자음퀴즈': function() {
console.log('자퀴');
},

'훈민정음': function() {
console.log('훈민');
},

'영어 끝말잇기': function() {
    var f = $Dsp.text();
    f = (f.includes('(') ? '(' + f.replace('(', '|') : f.includes(':') ? pf : f);
    console.log('Search: ' + f);
    var _Found = (db.match('\\[(' + f + '.*)\\]')[0] || '');
        $Talk.val(_Found.slice(1, -1));
      	$Take.click();
        db = db.replace(_Found, '');
        pf = f;
},

'영어 끄투': function() {
    var f = $Dsp.text();
    f = (f.includes('(') ? '(' + f.replace('(', '|') : f.includes(':') ? pf : f);
    console.log('Search: ' + f);
    var _Found = (db.match('\\[(' + f + '.*)\\]')[0] || '');
        $Talk.val(_Found.slice(1, -1));
      	$Take.click();
        db = db.replace(_Found, '');
        pf = f;
},

'영어 타자 대결': function() {
var f = $Dsp.text();
$Talk.val(option.includes('속담') ? f : f.split(' '));
$Take.click();
},

'영어 단어 대결': function() {
console.log('영단');
},

'영어 솎솎': function() {
console.log('영쇽');
}

};

/*
function wPrint() {
    if (_State) _State = false;
    var f = $Dsp.text();
    f = (f.includes('(') ? '(' + f.replace('(', '|') : f.includes(':') ? pf : f);
    console.log('Search: ' + f);
    var _Found = (db.match('\\[(' + f + '.*[^다])\\]')[0] || '');
        $Talk.val(_Found.slice(1, -1));
      	$Take.click();
        db = db.replace(_Found, '');
        pf = f;
}
*/

$Round.on('DOMSubtreeModified', function() {
        if (_State) return false;
	var $Mode = $("h5.room-head-mode");
        option = $Mode.html().split(' / ');
        mode = option.splice(0, 1);
        db = shuffle(wBox);
	console.log('[New Game]\nmode: ' + mode + '\noption: ' + option + '\n  ');
        _State = true;
})

function shuffle(box) {
        var arr = box.split('\n');
	var CurIndex = arr.length, TempValue, RndIndex;
	while (0 !== CurIndex) {
		RndIndex = Math.floor(Math.random() * CurIndex);
		CurIndex -= 1;
		TempValue = arr[CurIndex];
		arr[CurIndex] = arr[RndIndex];
		arr[RndIndex] = TempValue;
	}
	return arr.join('\n');
}

function readUrl(Url) {
    return $.ajax({
        type: "GET",
        url: 'https://raw.githubusercontent.com/Rosantex/my/master/' + Url,
        async: false
    }).responseText;
}

$Board.html("<p style='color:#000; font-size:9pt'>by Rosantex</p>");

$("#ReplayDiag .dialog-title").html('AlphaKKU Ver 1.65').css({
width: '280',
fontsize: '17',
fontweight: 'bold', 
color: 'white', 
background: 'black' 
});

$Board.append("<input type='text' id='Setkey' value='keydown here' /><input type='button' id='SetHotkey' value='SET' />");

var $setkey = $('#Setkey');
var $sethotkey = $('#SetHotkey');
var key, Hotkey;
var setlock = false;

$setkey.parent().css({position: 'relative'}); 

$setkey.css({
width: 120,
top: 20, 
left: 0, 
position:'absolute',
background: 'MintCream'
});

$sethotkey.css({ 
width: 40, 
top: 20, 
left: 140,
position:'absolute',
background: 'skyblue'
});

$("#ReplayDiag").fadeIn(120);

$(window).on('keydown', function(e) {
if (!$Turn.is(":visible")) return false;
if (e.keyCode == Hotkey) {
e.preventDefault();
PLAY[mode]();
}
});

$setkey.on('keydown', function(e) {
if (setlock) return false;
e.preventDefault();
key = e.keyCode;
$(this).val(keyList[key]||String.fromCharCode(key));
}).on('dblclick', function(e) {
if (setlock) setlock = false;
$(this).css({ background: 'MintCream' });
});

$sethotkey.on('click', function() {
if (setlock) return false;
Hotkey = key;
$setkey.css('background', 'pink');
setlock = true;
console.log('Hotkey Modified: ' + (keyList[key]||String.fromCharCode(key)));
});

var keyList = { 
8: "BackSpace", 
9: "Tab", 
12: "Form Feed",
13: "Enter", 
16: "Shift", 
17: "LCtrl", 
18: "LAlt",
19: "Pause",
20: "CpasLock",
27: "ESC",
32: "SpaceBar",
33: "PgUp",
34: "PgDown",
35: "End",
36: "Home",
37: "Left",
38: "Up",
39: "Right",
40: "Down",
45: "Insert",
46: "Delete",
91: "WinKey", 
96: "Numpad0",
97: "Numpad1",
98: "Numpad2",
99: "Numpad3",
100: "Numpad4",
101: "Numpad5",
102: "Numpad6",
103: "Numpad7",
104: "Numpad8",
105: "Numpad9",
106: "NumpadMult",
107: "NumpadAdd",
109: "NumpadSub",
110: "NumpadPoint",
111: "NumpadDiv",
112: "F1", 
113: "F2", 
114: "F3", 
115: "F4", 
116: "F5",
117: "F6",
118: "F7",
119: "F8",
120: "F9",
121: "F10",
122: "F11",
123: "F12",
144: "NumLock",
186: "Semicolon(;)",
187: "Equal Sign(=)",
188: "Comma(,)",
189: "Hyphen Minus(-)",
190: "Full Stop(.)",
191: "Slash(/)",
192: "Back Tick(`)",
219: "Square Bracket([)",
220: "BackSlash(\)",
221: "Square Bracket(])",
222: "Apostrophe(')",
225: "RCtrl", 
229: "RAlt" 
};

</script>
